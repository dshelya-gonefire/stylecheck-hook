<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<module name="Checker">
	<module name="TreeWalker">
		<!-- Checks for Naming Conventions.                  -->
		<module name="AbbreviationAsWordInName">
			<property name="allowedAbbreviationLength" value="1"/>
			<property name="allowedAbbreviations" value="DTO"/>
		</module>
		<module name="CatchParameterName">
			<property name="format" value="^(e|t|ex|[a-z][a-z][a-zA-Z]+)$"/>
		</module>
		<module name="MethodTypeParameterName"/>
		<module name="InterfaceTypeParameterName"/>
		<module name="ConstantName"/>
		<module name="LocalFinalVariableName"/>
		<module name="LocalVariableName"/>
		<module name="MemberName"/>
		<module name="MethodName"/>
		<module name="PackageName"/>
		<module name="ParameterName"/>
		<module name="StaticVariableName"/>
		<module name="ClassTypeParameterName"/>
		<module name="TypeName"/>

		<!-- Checks for imports                              -->
		<module name="AvoidStarImport"/>
		<module name="IllegalImport"/>
		<module name="RedundantImport"/>
		<module name="UnusedImports">
			<property name="processJavadoc" value="false"/>
		</module>

		<!-- Annotations -->
		<module name="MissingOverride">
			<property name="javaFiveCompatibility" value="true"/>
		</module>
		<module name="SuppressWarnings">
			<property name="format" value="^unchecked$|^unused$"/>			
		</module>

		<!-- Checks for Size Violations.                    -->
		<module name="LineLength">
			<property name="max" value="150"/>
		</module>
		<module name="MethodLength"/>
		<module name="ParameterNumber"/>

		<!-- Modifier Checks                                    -->
		<module name="ModifierOrder"/>
		<module name="RedundantModifier"/>

		<!-- Checks for blocks. You know, those {}'s         -->
		<module name="AvoidNestedBlocks"/>
		<module name="EmptyBlock"/>
		<module name="LeftCurly"/>
		<module name="NeedBraces"/>
		<module name="RightCurly"/>
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName" value="expected|ignore"/>
		</module>

		<!-- Checks for common coding problems               -->
		<module name="StringLiteralEquality"/>
		<module name="UnnecessaryParentheses"/>
		<module name="AvoidInlineConditionals"/>
		<module name="EmptyStatement"/>
		<module name="EqualsHashCode"/>
		<module name="IllegalInstantiation"/>
		<module name="IllegalThrows">
			<property name="ignoreOverriddenMethods" value="false"/>
		</module>
		<module name="InnerAssignment"/>
		<module name="MagicNumber"/>
		<module name="MissingSwitchDefault"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="NestedForDepth">
			<property name="max" value="3"/>
		</module>
		<module name="NestedIfDepth">
			<property name="max" value="3"/>
		</module>
		<module name="NestedTryDepth">
			<property name="max" value="3"/>
		</module>
		<module name="NoFinalizer"/>

		<!-- Checks for class design                         -->
		<module name="FinalClass"/>
		<module name="MutableException"/>
		<module name="InterfaceIsType"/>
		<module name="VisibilityModifier"/>
		<module name="CovariantEquals"/>
		<module name="IllegalCatch"/>
		<module name="InnerTypeLast"/>
		<module name="ThrowsCount">
			<property name="max" value="2"/>
		</module>
		<module name="EqualsAvoidNull"/>
		<module name="DeclarationOrder"/>
		<module name="ExplicitInitialization"/>
		<module name="InnerAssignment"/>
		<module name="ModifiedControlVariable"/>
		<module name="MultipleVariableDeclarations"/>
		<module name="OneStatementPerLine"/>
		<module name="ParameterAssignment"/>
		<module name="ReturnCount">
			<property name="max" value="1"/>
			<property name="maxForVoid" value="0"/>
		</module>

		<!-- Metrics.                   -->
		<module name="NPathComplexity"/>
		<module name="CyclomaticComplexity">
			<property name="max" value="9"/>
		</module>
		<!-- Determines complexity of methods, classes and files by counting the Non Commenting Source Statements (NCSS)-->
		<module name="JavaNCSS">
			<property name="methodMaximum" value="40"/>
		</module>
		<!-- Miscellaneous other checks.                   -->
		<module name="TrailingComment"/>
		<module name="ArrayTypeStyle"/>
		<module name="TodoComment">
			<property name="format" value="(TODO)|(FIXME)"/>
		</module>
		<module name="UpperEll"/>
		<module name="UncommentedMain"/>
		<module name="AvoidEscapedUnicodeCharacters"/>

		<!--The condition in for performs no check-->
		<module name="DescendantToken">
			<property name="tokens" value="FOR_CONDITION"/>
			<property name="limitedTokens" value="EXPR"/>
			<property name="minimumNumber" value="1"/>
			<property name="maximumMessage" value="The condition in for performs no check"/>			
		</module>

		<!--Comparing this with null (i.e. this == null and this != null)-->
		<module name="DescendantToken">
			<property name="tokens" value="EQUAL,NOT_EQUAL"/>
			<property name="limitedTokens" value="LITERAL_THIS,LITERAL_NULL"/>
			<property name="maximumNumber" value="1"/>
			<property name="maximumDepth" value="1"/>
			<property name="sumTokenCounts" value="true"/>
			<property name="maximumMessage" value="Comparing THIS with null is discouraged"/>
		</module>

		<!--The initialiser in for performs no setup (where a while statement could be used instead)-->
		<module name="DescendantToken">
			<property name="tokens" value="FOR_INIT"/>
			<property name="limitedTokens" value="EXPR"/>
			<property name="minimumNumber" value="1"/>
			<property name="maximumMessage" value="The initialiser in FOR performs no setup. Use WHILE statement instead"/>			
		</module>

		<!--A switch within a switch-->
		<module name="DescendantToken">
			<property name="tokens" value="LITERAL_SWITCH"/>
			<property name="limitedTokens" value="LITERAL_SWITCH"/>
			<property name="maximumNumber" value="0"/>
			<property name="minimumDepth" value="1"/>
			<property name="maximumMessage" value="A switch within a switch is prohibited"/>
		</module>

		<!--A return statement from within a catch or finally block-->
		<module name="DescendantToken">
			<property name="tokens" value="LITERAL_FINALLY,LITERAL_CATCH"/>
			<property name="limitedTokens" value="LITERAL_RETURN"/>
			<property name="maximumNumber" value="0"/>
			<property name="maximumMessage" value="A return statement from within a catch or finally block is not allowed"/>
		</module>

		<!--A return with null statement -->
		<module name="DescendantToken">
			<property name="tokens" value="LITERAL_RETURN"/>
			<property name="limitedTokens" value="LITERAL_NULL"/>
			<property name="maximumNumber" value="0"/>
			<property name="maximumMessage" value="Null value cannot be directly returned, use local variable instead"/>
		</module>

		<!--A try statement within a catch or finally block-->
		<module name="DescendantToken">
			<property name="tokens" value="LITERAL_CATCH,LITERAL_FINALLY"/>
			<property name="limitedTokens" value="LITERAL_TRY"/>
			<property name="maximumNumber" value="0"/>
			<property name="maximumMessage" value="A try statement within a catch or finally block is not allowed"/>
		</module>

		<!--A @Transactional annotation is used with a private method-->
		<module name="Regexp">
			<property name="format" value="@Transactional\(*.*?\)*(([\s\n]*@\w+\(*.*?\)*)*[\s\n]*)*private"/>
			<property name="illegalPattern" value="true"/>
			<property name="ignoreComments" value="true"/>
			<property name="message" value="A @Transactional annotation should not be used with a private method"/>
		</module>
	</module>

</module>
